{"version":3,"sources":["./src/app/weather/weather.component.ts","./src/app/weather/weather.component.html","./src/environments/environment.ts","./src/app/contact-detail/contact-detail.component.ts","./src/app/weather/weather.service.ts","./src/app/Service_Http/ip.component.ts","./src/app/ReactiveForm/Sign-up.component.ts","./src/app/app.component.ts","./src/app/app.component.html","./src/app/Service_Http/ip.service.ts","./src/app/app.module.ts","./src/app/contacts/contacts.component.ts","./src/app/contacts/contacts.component.html","./src/app/ngForm/sign-in.service.ts","./src/app/page-not-found/page-not-found.component.ts","./src/app/page-not-found/page-not-found.component.html","./src/app/app-routing.module.ts","./src/app/ngForm/ngformtemplate.component.ts","./src/main.ts","./$_lazy_route_resource lazy namespace object"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["import { Component, OnInit } from '@angular/core';\nimport { WeatherService } from './weather.service';\n\n@Component({\n  selector: 'app-weather',\n  templateUrl: './weather.component.html',\n  styleUrls: ['./weather.component.css'],\n  providers: [WeatherService]\n})\nexport class WeatherComponent implements OnInit {\n  temp = 0; name = \"\"; cityname = ''; humidity = 0; \n  isLoading = false ;\n  constructor(private weatherservice: WeatherService) { }\n\n  ngOnInit(): void {\n    // this.weatherservice.getTemp(\"Saigon\")\n    //     .then(temp => console.log(temp)) // this.temp = temp\n    //    // .then(name => console.log(name)) // this.name = name\n    //     //.then(humidity => console.log(humidity))\n    //     .catch(err => console.log(err));\n  }\n  getWeather(e:string){\n      this.isLoading = true ;\n       this.weatherservice.getTemp(this.convertViToEn(e,false))\n      .then(res => { this.temp = res.temp; \n                     this.humidity = res.humidity;\n                      this.name = res.name;\n                      this.isLoading = false ;\n                      this.cityname = ''; })\n      .catch(err => {\n        alert('Cannot find your City !');\n        this.cityname = '';\n        this.isLoading = false ;\n      });\n      \n    } \n    getMessage(){\n      if(this.isLoading){\n        return 'Loading.....';\n      }else{\n        return this.name === '' ? 'Enter your City name' : \n          (this.name + ' is now t° : ' +  this.temp + ' °C ' + ' || Độ ẩm : ' + this.humidity);\n      }\n    }\n\n     convertViToEn(str, toUpperCase = false) {\n      str = str.toLowerCase();\n      str = str.replace(/à|á|ạ|ả|ã|â|ầ|ấ|ậ|ẩ|ẫ|ă|ằ|ắ|ặ|ẳ|ẵ/g, \"a\");\n      str = str.replace(/è|é|ẹ|ẻ|ẽ|ê|ề|ế|ệ|ể|ễ/g, \"e\");\n      str = str.replace(/ì|í|ị|ỉ|ĩ/g, \"i\");\n      str = str.replace(/ò|ó|ọ|ỏ|õ|ô|ồ|ố|ộ|ổ|ỗ|ơ|ờ|ớ|ợ|ở|ỡ/g, \"o\");\n      str = str.replace(/ù|ú|ụ|ủ|ũ|ư|ừ|ứ|ự|ử|ữ/g, \"u\");\n      str = str.replace(/ỳ|ý|ỵ|ỷ|ỹ/g, \"y\");\n      str = str.replace(/đ/g, \"d\");\n      // Some system encode vietnamese combining accent as individual utf-8 characters\n      str = str.replace(/\\u0300|\\u0301|\\u0303|\\u0309|\\u0323/g, \"\"); // Huyền sắc hỏi ngã nặng\n      str = str.replace(/\\u02C6|\\u0306|\\u031B/g, \"\"); // Â, Ê, Ă, Ơ, Ư\n      str = str.normalize(\"NFD\")\n      str = str.replace(/[\\u0300-\\u036f]/g, \"\")\n      str = str.replace(/đ/g, \"d\")\n      str = str.replace(/Đ/g, \"D\");\n      str = str.replace(/\\s+/g, ''); // Xóa Khoảng trắng\n      return toUpperCase ? str.toUpperCase() : str;\n  }\n}\n","<div class=\"weather\">\n<p>Weather works!</p>\n<h3>{{ getMessage() }}</h3>\n<input id=\"input\" placeholder=\"Enter your City name\" [(ngModel)] = \"cityname\" />\n<br><br>\n<button (click)=\"getWeather(cityname)\">Get weather</button>\n\n</div>\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { Component, OnInit } from '@angular/core';\nimport { from } from 'rxjs';\nimport { ActivatedRoute, ParamMap } from '@angular/router';\n@Component({\n  selector: 'app-contact-detail',\n  template: '<p>Tên: {{ name }}</p><p>SĐT: {{ phoneNumber }}</p>',\n  styleUrls: ['./contact-detail.component.css']\n})\nexport class ContactDetailComponent implements OnInit {\n  name = ''; phoneNumber = '';\n  constructor( private route: ActivatedRoute) { }\n\n  ngOnInit(): void {\n    this.route.paramMap.subscribe((params: ParamMap) => {\n        const id = params.get('id');\n        this.name = params.get('name');\n        this.phoneNumber = params.get('phoneNumber');\n        console.log(id + \" / \" + this.name + \" / \" + this.phoneNumber);\n    });\n  }\n\n}\n","import { Injectable } from '@angular/core';\r\nimport { HttpClientModule, HttpClient  } from '@angular/common/http';\r\n\r\n@Injectable()\r\n\r\nexport class WeatherService {\r\n    dataWeather = [];\r\n    constructor( private http: HttpClient){\r\n\r\n    }\r\n    getTemp(cityname: String){\r\n        console.log(cityname);\r\n        const url = 'http://api.openweathermap.org/data/2.5/weather?appid=868baa2ccd23703d5e4bc2752aa7b595&units=metric&q=' + cityname;\r\n        console.log(url);\r\n        return this.http.get<DataResponse>(url)\r\n                    .toPromise()\r\n                    .then((res: any) => {\r\n                        const temp = res.main.temp;\r\n                        const humidity = res.main.humidity;\r\n                        const name = res.name;\r\n                        const country = res.sys.country;\r\n                        return {temp , humidity , name, country}\r\n                    });\r\n    }\r\n}\r\ninterface DataResponse {\r\n    temp: Number;\r\n    humidity: Number;\r\n    name: String;\r\n  }","import { Component, OnInit } from '@angular/core';\r\nimport { IpService } from './ip.service';\r\n\r\n@Component({\r\n    selector: 'app-ip',\r\n    template: '<h3> Ip Component : {{ ip }}</h3>',\r\n    providers: [IpService]\r\n})\r\n\r\nexport class IpComponent implements OnInit {\r\n    \r\n    ip : String;\r\n    constructor(private ipservice: IpService) {         \r\n     }\r\n\r\n    ngOnInit(): void {\r\n        // this.http.get('http://jsonplaceholder.typicode.com/posts').subscribe(data => {\r\n        //     console.log(data); // using the HttpClient instance, http to call the API then subscribe to the data and display to console\r\n        //   });\r\n\r\n        this.ipservice.getIp()\r\n            .then(ip => this.ip = ip);\r\n     }\r\n}\r\n\r\n\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { from } from 'rxjs';\r\nimport { FormGroup, FormControl, FormBuilder, Validators } from '@angular/forms';\r\n\r\n@Component({\r\n    selector: 'app-sign-up',\r\n    template: `\r\n    <form (ngSubmit)=\"onSubmit();\" [formGroup]=\"formSignUp\" >\r\n        <input placeholder=\"Email\"  formControlName=\"email\" />\r\n        <p *ngIf=\"formSignUp.get('email').invalid && formSignUp.get('email').touched\" >Email is require</p>\r\n        <br><br>\r\n        <input placeholder=\"Password\" type=\"password\" formControlName=\"password\" />\r\n        <br><br>\r\n        <div formGroupName=\"Subjects\">\r\n            <label><input type=\"checkbox\" name=\"NodeJS\" formControlName=\"NodeJS\" >NodeJS</label>\r\n            <label><input type=\"checkbox\" mame=\"Angular\" formControlName=\"Angular\" >Angular</label>\r\n            <label><input type=\"checkbox\" name=\"ReactJS\" formControlName=\"ReactJS\" >ReactJS</label>\r\n        </div>\r\n        <br>\r\n        <button [disabled]=\"formSignUp.invalid\" >Submit</button>\r\n    </form>\r\n    <code>{{ formSignUp.controls.email.errors | json }}</code>\r\n   `\r\n})\r\n\r\nexport class SignUpComponent implements OnInit {\r\n    formSignUp: FormGroup;\r\n    constructor(private fb: FormBuilder) {  }\r\n\r\n    ngOnInit() {\r\n        this.formSignUp = this.fb.group({\r\n            //email: 'Liem123@gmail.com',\r\n            email: ['', [Validators.required, gmailValidator]],\r\n            password: ['', Validators.required],\r\n            Subjects: this.fb.group({\r\n                NodeJS: true,\r\n                Angular: false,\r\n                ReactJS: true\r\n            })    \r\n        });\r\n     }\r\n\r\n    onSubmit(){\r\n        console.log(this.formSignUp.value);\r\n    }\r\n    \r\n}\r\nfunction gmailValidator(formControl: FormControl) {\r\n    if(formControl.value.includes('@gmail.com')){\r\n        return null;\r\n    }\r\n    return {gmail: true};\r\n}","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  title = 'App2-Angular';\n  \n}\n\n","<!-- <app-ip></app-ip> -->\n<app-weather></app-weather>\n<br>\n<app-ngformtemplate></app-ngformtemplate>\n\n<app-sign-up></app-sign-up>\n<a routerLink=\"/contacts\" > Contacts</a>  <span>    ||  </span>\n<a routerLink=\"/detail\" >  Detail</a>\n<router-outlet></router-outlet>","import { Injectable } from \"@angular/core\";\r\nimport { HttpClient, HttpClientModule } from '@angular/common/http';\r\n\r\n\r\n@Injectable()\r\n\r\nexport class IpService {\r\n\r\n    url = 'http://ip.jsontest.com/';\r\n    //ip = {\"ip\": \"2001:ee0:4f0d:3bf0:ec07:6ca:29bb:8bc7\"};\r\n\r\n    constructor( private http: HttpClient){       \r\n    }      \r\n    getIp(){\r\n        return this.http.get(this.url)\r\n                    .toPromise()\r\n                    .then(JSON => JSON['ip'])\r\n                    .catch(err => console.log(err));\r\n        // const ip = this.ip['id'];\r\n        // return ip;\r\n    }\r\n    \r\n}","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { HttpClientModule } from '@angular/common/http';\n//import { Routes, RouterModule } from '@angular/router';\n\n// const routeConfig: Routes = [\n//   { path: 'contacts' , component: ContactsComponent },\n//   { path: 'detail' , component: ContactDetailComponent },\n//   { path: '' , redirectTo: '/contacts' , pathMatch: 'full' },\n//   { path: '**' , component: PageNotFoundComponent }\n// ];\n\nimport { AppComponent } from './app.component';\nimport { from } from 'rxjs';\nimport { IpComponent } from './Service_Http/ip.component';\nimport { IpService } from './Service_Http/ip.service';\nimport { WeatherComponent } from './weather/weather.component';\nimport { ngFormTemplateComponent } from './ngForm/ngformtemplate.component';\nimport { SignUpComponent } from './ReactiveForm/Sign-up.component';\n// import { ContactsComponent } from './contacts/contacts.component';\n// import { ContactDetailComponent } from './contact-detail/contact-detail.component';\nimport { Route } from '@angular/compiler/src/core';\n//import { PageNotFoundComponent } from './page-not-found/page-not-found.component';\nimport { AppRoutingModule } from './app-routing.module';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    IpComponent,\n    WeatherComponent,\n    ngFormTemplateComponent,\n    SignUpComponent,\n    // ContactsComponent,\n    // ContactDetailComponent,\n    // PageNotFoundComponent,\n   \n\n  ],\n  imports: [\n    BrowserModule,\n    FormsModule,\n    HttpClientModule,\n    ReactiveFormsModule,\n    // RouterModule.forRoot(routeConfig),\n    AppRoutingModule\n\n  ],\n  providers: [IpService],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-contacts',\n  templateUrl: './contacts.component.html',\n  styleUrls: ['./contacts.component.css']\n})\nexport class ContactsComponent implements OnInit {\n  contacts = [\n    { id: 1, name: 'Teo', phoneNumber: '0123' },\n    { id: 2, name: 'Ti', phoneNumber: '0456' },\n    { id: 3, name: 'Tun', phoneNumber: '0789' },\n  ];\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<div *ngFor=\"let contact of contacts\" >\n    <a routerLink=\"/detail/{{ contact.id }}/{{ contact.name }}/{{ contact.phoneNumber }}\" >\n    {{ contact.name }}\n    </a>\n</div>\n\n","import { Component, Injectable, OnInit } from '@angular/core';\r\nimport { from } from 'rxjs';\r\nimport { HttpClient, HttpHeaders, HttpHeaderResponse, HttpErrorResponse } from '@angular/common/http';\r\n\r\n@Injectable()\r\n\r\nexport class SignInService {\r\n    constructor(private http: HttpClient){}\r\n        SendPost(value){\r\n        console.log(value);  // formSignIn.value\r\n        const url = 'http://localhost:3000/signin';\r\n        const headers = new HttpHeaders().set('Content-Type', 'application/json; charset=utf-8');\r\n        const body = JSON.stringify(value);\r\n        return this.http.post(url, body, { headers }) // responseType: 'text' as 'json'\r\n                .toPromise()\r\n                //.then(res => res.valueOf())\r\n                .then((res : any) => {\r\n                     console.log(res.email + \"  ||  \"  + res.password );\r\n                     console.log(res.subjects.Footbal); \r\n                    })\r\n               .catch((err: HttpErrorResponse) => {\r\n                    // simple logging, but you can do a lot more, see below\r\n                    console.error('An error occurred:', err.error);\r\n                })\r\n            ;\r\n            //throw new Error('Form is invalid');\r\n    }\r\n}","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-page-not-found',\n  templateUrl: './page-not-found.component.html',\n  styleUrls: ['./page-not-found.component.css']\n})\nexport class PageNotFoundComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<p>page-not-found works!</p>\n","import { BrowserModule } from '@angular/platform-browser';\r\nimport { NgModule } from '@angular/core';\r\nimport { Routes, RouterModule } from '@angular/router';\r\n\r\nimport { ContactsComponent } from './contacts/contacts.component';\r\nimport { ContactDetailComponent } from './contact-detail/contact-detail.component';\r\nimport { Route } from '@angular/compiler/src/core';\r\nimport { PageNotFoundComponent } from './page-not-found/page-not-found.component';\r\n\r\nconst routeConfig: Routes = [\r\n    { path: 'contacts' , component: ContactsComponent },\r\n    { path: 'detail/:id/:name/:phoneNumber' , component: ContactDetailComponent },\r\n    { path: '' , redirectTo: '/contacts' , pathMatch: 'full' },\r\n    { path: '**' , component: PageNotFoundComponent }\r\n  ];\r\n\r\n@NgModule({\r\n    declarations: [\r\n      ContactsComponent,\r\n      ContactDetailComponent,\r\n      PageNotFoundComponent,\r\n    ],\r\n    imports: [\r\n      BrowserModule,\r\n      RouterModule.forRoot(routeConfig)\r\n    ],\r\n    exports: [RouterModule]\r\n})\r\nexport class AppRoutingModule { }","import { Component, OnInit } from '@angular/core';\r\nimport { from } from 'rxjs';\r\nimport { HttpClient, HttpHeaders, HttpHeaderResponse, HttpErrorResponse } from '@angular/common/http';\r\nimport { SignInService } from './sign-in.service';\r\n\r\n@Component({\r\n    selector: 'app-ngformtemplate',\r\n    template: `\r\n        <form (ngSubmit) = \"onSubmit(formSignIn);\" \r\n                        #formSignIn = \"ngForm\">\r\n            <!-- <p *ngIf=\"formSignIn.controls.email?.errors?.required\" >\r\n                Email is required</p> -->\r\n            <p *ngIf=\"txtEmail.touched && txtEmail.errors?.required\" >\r\n                Email is required</p>\r\n            <p *ngIf=\"txtEmail.touched && txtEmail.errors?.email\" >\r\n                Email is not valid</p>\r\n            <input placeholder=\"Email\" required email\r\n                   ngModel #txtEmail=\"ngModel\" name=\"email\" />\r\n            <br><br>\r\n            <input placeholder=\"Password\" type=\"password\" required password\r\n                   ngModel name=\"password\"\r\n                   #txtpassword=\"ngModel\" \r\n                   minlength=\"6\"\r\n                   pattern=\"[a-z]*\" />\r\n            <br><br>\r\n            <div ngModelGroup = \"subjects\">\r\n                <label><input type=\"checkbox\" [ngModel] = \"false\" name=\"Footbal\" >Footbal</label>\r\n                <label><input type=\"checkbox\" [ngModel] = \"false\" name=\"Tennis\" >Tennis</label>\r\n                <label><input type=\"checkbox\" [ngModel] = \"false\" name=\"Golt\" >Golt</label>\r\n            </div>\r\n            <br><br>\r\n            <button [disabled]=\"formSignIn.invalid\" >Submit</button>\r\n        </form>\r\n        <br>\r\n        <button (click)=\"postToExpress();\" >POST</button>\r\n        <!-- <p>{{ txtEmail.errors | json }}</p> -->\r\n            <p>{{ formSignIn.value | json }}</p>\r\n            <p>{{ txtpassword.errors | json }}</p>\r\n    `,\r\n    providers:[SignInService]\r\n})\r\n\r\nexport class ngFormTemplateComponent implements OnInit {\r\n    //email = ''; password = '';\r\n    constructor(private http: HttpClient , private signinService: SignInService) { } // private http: HttpClient , \r\n\r\n    ngOnInit() { }\r\n\r\n    onSubmit(formSignIn){\r\n        //console.log(this.email + \" || \" + this.password);\r\n        // console.log(formSignIn.value);  // formSignIn.value\r\n        // const url = 'http://localhost:3000/signin';\r\n        // const headers = new HttpHeaders().set('Content-Type', 'application/json; charset=utf-8');\r\n        // const body = JSON.stringify(formSignIn.value);\r\n        // this.http.post(url, body, { headers }) // responseType: 'text' as 'json'\r\n        //         .toPromise()\r\n        //         //.then(res => res.valueOf())\r\n        //         .then((res : any) => {\r\n        //              console.log(res.email + \"  ||  \"  + res.password );\r\n        //              console.log(res.subjects.Footbal); \r\n        //             })\r\n        //        .catch((err: HttpErrorResponse) => {\r\n        //             // simple logging, but you can do a lot more, see below\r\n        //             console.error('An error occurred:', err.error);\r\n        //         })\r\n        //     ;\r\n        //     //throw new Error('Form is invalid');\r\n        // =======================================\r\n        this.signinService.SendPost(formSignIn.value)\r\n            .then(result => console.log(result))\r\n            .catch(err => console.log(err));\r\n\r\n    }\r\n    postToExpress(){\r\n        const url = 'http://localhost:3000/testJson';\r\n        const headers = new HttpHeaders().set('Content-Type', 'application/json; charset=utf-8');\r\n        const body = JSON.stringify({ name:\"Khoa Pham\", Cost:\"30000\" });\r\n        this.http.post(url, body, { headers }) // responseType: 'text' as 'json'\r\n                .toPromise()\r\n                .then(res => res.valueOf())\r\n                .then((res : any) => {\r\n                     console.log(res);\r\n                     console.log(res.name + \" - \"  + res.Cost );\r\n                })\r\n               .catch((err: HttpErrorResponse) => {\r\n                    // simple logging, but you can do a lot more, see below\r\n                    console.error('An error occurred:', err.error);\r\n                })\r\n            ;\r\n    }\r\n    \r\n}","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n","function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"zn8P\";"],"sourceRoot":"webpack:///"}